#!/bin/sh

dir="$(pwd)"
cd "$(dirname "$0")"
bin="$(pwd)"
cd ..
home="$(pwd)"
cd ..
root="$(pwd)"
cd "${dir}"
obj="${home}/obj"

lumen="$(which lumen)"
if [ ! -e "${lumen}" ]; then
  lumen="${root}/lumen/bin/lumen"
fi
if [ ! -e "${lumen}" ]; then
  2>&1 echo "lumen not found" && exit 1
fi

if [ ! -z ${LUMEN_HOST} ]
then
    host=${LUMEN_HOST}
elif luajit -v > /dev/null 2>&1
then
    host=luajit
elif lua -v > /dev/null 2>&1
then
    host=lua
elif node -v > /dev/null 2>&1
then
    host=node
else
    2>&1 echo "no host found" && exit 1
fi

case $host in
    node*)
        ext=js
        export NODE_PATH="$NODE_PATH:${bin}:${dir}/lib";;
    *)
        ext=lua
        export LUA_PATH="$LUA_PATH;${bin}/?.lua;${dir}/lib/?.lua;;";;
esac

code="${bin}/arc.${ext}"

read -r -d '' run_stdin <<'EOF'
(let in ((get (require 'system) 'get-environment-variable) 'stdin)
  (arc-eval (join (list 'list) (arc-read in))) nil)
EOF

# run stdin as an arc script.
if [ ! -t 0 ]; then
  stdin="`cat`" exec "${lumen}" "${code}" -e "${run_stdin}"
fi

# if the first arg exists, assume it's an arc script.
if [ ! -z "$1" ]; then
  stdin="`cat "$1"`" exec "${lumen}" "${code}" -e "${run_stdin}"
fi

# start a repl, using rlwrap if it's available.
wrap="$(which rlwrap)"
if [ ! -z "${wrap}" ]; then
  exec "${wrap}" "${lumen}" "${code}" "$@"
else
  exec           "${lumen}" "${code}" "$@"
fi

